package image;

import java.awt.Color;
import java.awt.image.BufferedImage;

public class ImageProcessor {
	public BufferedImage img;
	
	public ImageProcessor(BufferedImage img) {
		this.img=img;
		
	}
	 
	public BufferedImage getImage(){
		return img;
	}
	
	public void setImage(BufferedImage img) {
		this.img=img;
	}
	
	public static int constraint(int val ,int min,int max) {
		if(val<min) {
			return min;
		}
		else if(val>max) {
			return max;
		}
		return val; 
	}
	
	public void dim() {
		for(int i=0;i<img.getHeight();i++) {
			for(int j=0;j<img.getWidth();j++) {
				Color color = new Color(img.getRGB(i,j));
//				System.out.println("Original Color "+ color);
				
				int red = color.getRed()* 3/4;
				int green = color.getGreen()* 3/4;
				int blue = color.getBlue()* 3/4;
				
				Color newColor = new Color(red,green,blue);
//				System.out.println("New color "+ newColor);
				img.setRGB(i, j, newColor.getRGB());
			}
		}	
	}
	
	
	
	public void flip() {
		
		BufferedImage result  = createBlankResult();
		
		for(int y=0;y<;y++) {
			int y2 = 
			
		}
	}
	
	public void drawSquare(int cx,int cy,int r,Color color) {
		
		for(int y = Math.min(0, cy-r); y<Math.max(img.getHeight(), cy+r);y++) {
			for(int x = Math.min(0, cx-r); x<Math.max(img.getHeight(), cx+r);x++) {
				
				img.setRGB(x, y, color.getRGB());
			}
		}
		
		
	}
}

